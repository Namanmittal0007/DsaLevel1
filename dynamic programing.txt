22.Friends Pairing
#include<iostream>
using namespace std;
int main(){
    int n;
    cin>>n;
    int dp[n+1]={0};
    dp[1]=1;
    dp[2]=2;
    for(int i=3;i<=n;i++){
        dp[i]=dp[i-1]+(i-1)*dp[i-2];
    }
    cout<<dp[n];
    return 0;
}
_______________________________

23.Partition into subsets
#include<iostream>
using namespace std;
int main(){
    int n,k;
    cin>>n>>k;
    //cout<<n<<" "<<k<<endl;
    if(n==0 or k==0 or n<k){
        return 0;
    }
    long dp[k+1][n+1]={};
    
    for(int i=1;i<=k;i++){
        for(int j=1;j<=n;j++){
            if(i==1){
                dp[i][j]=1;
            }
            else if(j==i){
                dp[i][j]=1;
            }
            else if(j<i){
                dp[i][j]=0;
            }
            else{
                dp[i][j]=dp[i-1][j-1]+dp[i][j-1]*(i);
            }
        }
    }
    cout<<dp[k][n];
    return 0;
}
___________________________________

24.Buy sell Stocks: one transaction
#include<bits/stdc++.h>
using namespace std;
int main(){
    int n;
    cin>>n;
    int price[n];
    for(int i=0;i<n;i++){
        cin>>price[i];
    }
    int profit=0,minprice=INT_MAX;
    for(int i=0;i<n;i++){
        if(minprice>price[i]){
            minprice=price[i];
        }
        int currprofit=price[i]-minprice;
        profit=currprofit>profit?currprofit:profit;
    }
    cout<<profit;
    return 0;
}
_________________________________

25. Buy and sell stocks : infinitely many times
#include<iostream>
using namespace std;
int main(){
    int n;
    cin>>n;
    int arr[n];
    for(int i=0;i<n;i++){
        cin>>arr[i];
    }
    int profit=0;
    int buy=arr[0],sell=arr[0];
    for(int i=1;i<n;i++){
        if(arr[i]>=arr[i-1]){
            sell=arr[i];
        }
        else{
            profit+=sell-buy;
            buy=sell=arr[i];
        }
    }
    profit+=sell-buy;
    cout<<profit;
    return 0;
    
}
________________________________

26. Buy and sell stocks: Infinte times, Transaction charges

 #include<iostream>
using namespace std;
int main(){
    int n;
    cin>>n;
    int arr[n]={};
    for(int i=0;i<n;i++){
        cin>>arr[i];
    }
    int fee;
    cin>>fee;
    int ob=-arr[0],os=0;
    //cout<<ob<<" | "<<os<<endl;
    for(int i=1;i<n;i++){
        int nb=ob,ns=os;
        if(os-arr[i]>ob){
            nb=os-arr[i];
        }
        if(arr[i]+ob-fee>os){
            ns=arr[i]+ob-fee;
        }
        ob=nb;
        os=ns;
       // cout<<ob<<" | "<<os<<endl;
    }
    cout<<os;
    return 0;
 }
__________________________________

27.Buy and sell with cooldown- infinte times transaction
#include<iostream>
using namespace std;
int main(){
    int n;
    cin>>n;
    int arr[n]={};
    for(int i=0;i<n;i++){
        cin>>arr[i];
    }
    int ob=-arr[0],os=0,oc=0;
    //cout<<ob<<" | "<<os<<endl;
    for(int i=1;i<n;i++){
        int nb=ob,ns=os,nc=oc;
        if(oc-arr[i]>ob){
            nb=oc-arr[i];
        }
        if(arr[i]+ob>os){
            ns=arr[i]+ob;
        }
        if(os>oc){
            nc=os;
        }
        ob=nb;
        os=ns;
        oc=nc;
       // cout<<ob<<" | "<<os<<endl;
    }
    cout<<os;
    return 0;
 }
_______________________________________

28. Buy and sell stocks: Two transactions allowed
#include<bits/stdc++.h>
using namespace std;
int main(){
    int n;
    cin>>n;
    int arr[n]={0};
    for(int i=0;i<n;i++){
        cin>>arr[i];
    }
    int minbuy=arr[0];
    int dpl[n]={0};
    for(int i=1;i<n;i++){
        if(minbuy>arr[i]){
            minbuy=arr[i];
        }
        int currprofit=arr[i]-minbuy;
        dpl[i]=currprofit>dpl[i-1]?currprofit:dpl[i-1];
    }
    int maxsell=arr[n-1];
    int dpr[n]={0};
    for(int i=n-2;i>=0;i--){
        if(maxsell<arr[i]){
            maxsell=arr[i];
        }
        int currprofit=maxsell-arr[i];
        dpr[i]=currprofit>dpr[i+1]?currprofit:dpr[i-+1];
    }
    int result=INT_MIN;
    for(int i=0;i<n;i++){
        result=dpl[i]+dpr[i]>result?dpl[i]+dpr[i]:result;
    }
    cout<<result;
    return 0;
    
}
_____________________________________________

29. Buy and sell stocks: K transactions allowed
#include<bits/stdc++.h>
using namespace std;
int main(){
    int n;
    cin>>n;
    int arr[n]={0};
    for(int i=0;i<n;i++){
        cin>>arr[i];
    }
    int k;
    cin>>k;
    int dp[k+1][n]={};
    for(int i=1;i<=k;i++){
        int maxx=INT_MIN;
        for(int j=1;j<n;j++){
            if(dp[i-1][j-1]-arr[j-1]>maxx){
                maxx=dp[i-1][j-1]-arr[j-1];
            }
            if(maxx+arr[j]>dp[i][j-1]){
                dp[i][j]=maxx+arr[j];
            }
            else{
                dp[i][j]=dp[i][j-1];
            }
          //  cout<<dp[i][j]<<" ";
        }
        //cout<<endl;
    }
    cout<<dp[k][n-1];
    return 0;
}
_______________________________________________

